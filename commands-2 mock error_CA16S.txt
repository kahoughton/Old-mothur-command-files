#fastq.info(fastq=CA16Sv2.fastq)
#trim.seqs(fasta=CA16Sv2.fasta, qfile=CA16Sv2.qual, oligos=CA16Sv2_oligos.txt, qaverage=30, keepfirst=250, processors=4)
#summary.seqs(fasta=CA16Sv2.fasta)
#system(del CA16Sv2.scrap.fasta)
#system(del CA16Sv2.scrap.qual)
#system(del CA16Sv2.trim.qual)
#system(del CA16Sv2.qual)
#system(del CA16Sv2.fasta)
#system(ren CA16Sv2.trim.fasta CA16Sv2.fasta)
#unique.seqs(fasta=CA16Sv2.fasta)
#summary.seqs(fasta=CA16Sv2.unique.fasta, name=CA16Sv2.names)
#align.seqs(fasta=CA16Sv2.unique.fasta, reference=silva.nr_v119.pcr.align, processors=4)
#system(del CA16Sv2.unique.fasta)
#summary.seqs(fasta=CA16Sv2.unique.align,name=CA16Sv2.names)
screen.seqs(fasta=CA16Sv2.unique.align, name=CA16Sv2.names, group=CA16Sv2.groups, start=2, end=9579, processors=4)
system(del CA16Sv2.unique.align)
summary.seqs(fasta=CA16Sv2.unique.good.align, name=CA16Sv2.good.names)
filter.seqs(fasta=CA16Sv2.unique.good.align, trump=., vertical=T, processors=4)
system(del CA16Sv2.unique.good.align)
unique.seqs(fasta=CA16Sv2.unique.good.filter.fasta, name=CA16Sv2.good.names)
summary.seqs(fasta=CA16Sv2.unique.good.filter.unique.fasta, name=CA16Sv2.unique.good.filter.names)
pre.cluster(fasta=CA16Sv2.unique.good.filter.unique.fasta, name=CA16Sv2.unique.good.filter.names, group=CA16Sv2.good.groups, diffs=2, processors=4)
chimera.uchime(fasta=CA16Sv2.unique.good.filter.unique.precluster.fasta, name=CA16Sv2.unique.good.filter.unique.precluster.names, group=CA16Sv2.good.groups, processors=4)

remove.seqs(accnos=CA16Sv2.unique.good.filter.unique.precluster.uchime.accnos, fasta=CA16Sv2.unique.good.filter.unique.precluster.fasta, name=CA16Sv2.unique.good.filter.unique.precluster.names, group=CA16Sv2.good.groups)
summary.seqs(fasta=CA16Sv2.unique.good.filter.unique.precluster.pick.fasta, name=CA16Sv2.unique.good.filter.unique.precluster.pick.names)
count.groups()
classify.seqs(fasta=CA16Sv2.unique.good.filter.unique.precluster.pick.fasta, group=CA16Sv2.good.pick.groups, name=CA16Sv2.unique.good.filter.unique.precluster.pick.names, template=silva.nr_v119.align, taxonomy=silva.nr_v119.tax, cutoff=80, processors=4)
remove.lineage(taxonomy=CA16Sv2.unique.good.filter.unique.precluster.pick.nr_v119.wang.taxonomy, fasta=CA16Sv2.unique.good.filter.unique.precluster.pick.fasta, group=CA16Sv2.good.pick.groups, name=CA16Sv2.unique.good.filter.unique.precluster.pick.names, taxon=unknown-Chloroplast)
summary.seqs(fasta=CA16Sv2.unique.good.filter.unique.precluster.pick.pick.fasta, name=CA16Sv2.unique.good.filter.unique.precluster.pick.pick.names)
system(ren CA16Sv2.unique.good.filter.unique.precluster.pick.pick.names CA16Sv2.final.names)
system(ren CA16Sv2.unique.good.filter.unique.precluster.pick.pick.fasta CA16Sv2.final.fasta)
system(ren CA16Sv2.good.pick.pick.groups CA16Sv2.final.groups)
get.groups(group=CA16Sv2.final.groups, groups=Mock, fasta=CA16Sv2.final.fasta, name=CA16Sv2.final.names)
make.group(fasta=HMP_MOCK.v35.align, groups=MOCK.v35)
merge.files(input=HMP_MOCK.v35.groups-CA16Sv2.final.pick.groups, output=MOCKMERGE.groups)
merge.files(input=HMP_MOCK.v35.align-CA16Sv2.final.pick.fasta, output=MOCKMERGE.fasta)
align.seqs(fasta=MOCKMERGE.fasta, reference=silva.seed_v119.align, processors=4)
filter.seqs(fasta=MOCKMERGE.align, vertical=T, trump=.)
get.groups(fasta=MOCKMERGE.filter.fasta, group=MOCKMERGE.groups, groups=Mock)
system(ren MOCKMERGE.filter.pick.fasta Mock.filter.pick.fasta)
system(ren MOCKMERGE.pick.groups Mock.pick.groups)
get.groups(fasta=MOCKMERGE.filter.fasta, group=MOCKMERGE.groups, groups=MOCK.v35)
system(ren MOCKMERGE.filter.pick.fasta MOCK.v35.filter.pick.fasta)
system(ren MOCKMERGE.pick.groups MOCK.v35.pick.groups)
seq.error(fasta=Mock.filter.pick.fasta, name=CA16Sv2.final.pick.names, reference=MOCK.v35.filter.pick.fasta, processors=4)
#remove.groups(fasta=CA16Sv2.final.fasta, group=CA16Sv2.final.groups, groups=Mock, name=CA16Sv2.final.names, taxonomy=CA16Sv2.trim.unique.good.filter.unique.precluster.pick.nr_v119.wang.taxonomy)
#dist.seqs(fasta=CA16Sv2.final.fasta, processors=1)
#cluster(column=CA16Sv2.final.dist, name=CA16Sv2.final.names)
#make.shared(list=CA16Sv2.final.an.list, group=CA16Sv2.final.groups, label=0.03)
#count.groups()
#classify.otu(list=CA16Sv2.final.an.list, name=CA16Sv2.final.names, group=CA16Sv2.final.groups, taxonomy=CA16Sv2.unique.good.filter.unique.precluster.pick.nr_v119.wang.pick.taxonomy, label=0.03, cutoff=80)
#collect.single(shared=CA16Sv2.final.an.shared)
#rarefaction.single(shared=CA16Sv2.final.an.shared, calc=sobs, freq=100)
#summary.single()
#heatmap.bin(shared=CA16Sv2.final.an.shared, scale=log2, numotu=50)
#heatmap.sim(calc=jclass-thetayc)
#tree.shared(calc=thetayc-jclass)
#dist.shared(shared=CA16Sv2.final.an.shared, calc=thetayc-jclass)
#pcoa(phylip=current)
#pcoa(phylip=current)
#nmds(phylip=current)
#nmds(phylip=current)

