#fastq.info(fastq=TB18S.fastq)
#trim.seqs(fasta=TB18S.fasta, qfile=TB18S.qual, oligos=TB18S_oligos.txt, qaverage=30, processors=4)
#summary.seqs(fasta=TB18S.fasta)
#system(del TB18S.scrap.fasta)
#system(del TB18S.scrap.qual)
#system(del TB18S.trim.qual)
#system(del TB18S.qual)
#system(del TB18S.fasta)
#system(ren TB18S.trim.fasta TB18S.fasta)
#unique.seqs(fasta=TB18S.fasta)
#summary.seqs(fasta=TB18S.unique.fasta, name=TB18S.names)
#align.seqs(fasta=TB18S.unique.fasta, reference=silva.seed_v119.align, flip=t, processors=4)
#system(del TB18S.unique.fasta)
#summary.seqs(fasta=TB18S.unique.align,name=TB18S.names)
screen.seqs(fasta=TB18S.unique.align, name=TB18S.names, group=TB18S.groups, start=43112, end=25316, minlength=250, processors=4)
summary.seqs(fasta=TB18S.unique.good.align, name=TB18S.good.names)
#filter.seqs(fasta=TB18S.unique.good.align, trump=., vertical=T, processors=4)
#system(del TB18S.unique.good.align)
#unique.seqs(fasta=TB18S.unique.good.filter.fasta, name=TB18S.good.names)
#summary.seqs(fasta=TB18S.unique.good.filter.unique.fasta, name=TB18S.unique.good.filter.names)
#pre.cluster(fasta=TB18S.unique.good.filter.unique.fasta, name=TB18S.unique.good.filter.names, group=TB18S.good.groups, diffs=2, processors=4)
#chimera.uchime(fasta=TB18S.unique.good.filter.unique.precluster.fasta, name=TB18S.unique.good.filter.unique.precluster.names, group=TB18S.good.groups, processors=4)

#remove.seqs(accnos=TB18S.unique.good.filter.unique.precluster.uchime.accnos, fasta=TB18S.unique.good.filter.unique.precluster.fasta, name=TB18S.unique.good.filter.unique.precluster.names, group=TB18S.good.groups)
#summary.seqs(fasta=TB18S.unique.good.filter.unique.precluster.pick.fasta, name=TB18S.unique.good.filter.unique.precluster.pick.names)
#count.groups()
#classify.seqs(fasta=TB18S.unique.good.filter.unique.precluster.pick.fasta, group=TB18S.good.pick.groups, name=TB18S.unique.good.filter.unique.precluster.pick.names, template=silva.nr_v119.align, taxonomy=silva.nr_v119.tax, cutoff=90, processors=4)
#remove.lineage(taxonomy=TB18S.unique.good.filter.unique.precluster.pick.nr_v119.wang.taxonomy, fasta=TB18S.unique.good.filter.unique.precluster.pick.fasta, group=TB18S.good.pick.groups, name=TB18S.unique.good.filter.unique.precluster.pick.names, taxon=unknown)
#summary.seqs(fasta=TB18S.unique.good.filter.unique.precluster.pick.pick.fasta, name=TB18S.unique.good.filter.unique.precluster.pick.pick.names)
#system(ren TB18S.unique.good.filter.unique.precluster.pick.pick.names TB18S.final.names)
#system(ren TB18S.unique.good.filter.unique.precluster.pick.pick.fasta TB18S.final.fasta)
#system(ren TB18S.good.pick.pick.groups TB18S.final.groups)
#get.groups(group=TB18S.final.groups, groups=Mock, fasta=TB18S.final.fasta, name=TB18S.final.names)
#make.group(fasta=HMP_MOCK.v35.align, groups=MOCK.v35)
#merge.files(input=HMP_MOCK.v35.groups-TB18S.final.pick.groups, output=MOCKMERGE.groups)
#merge.files(input=HMP_MOCK.v35.align-TB18S.final.pick.fasta, output=MOCKMERGE.fasta)
#align.seqs(fasta=MOCKMERGE.fasta, reference=silva.seed_v119.align, processors=4)
#filter.seqs(fasta=MOCKMERGE.align, vertical=T, trump=.)
#get.groups(fasta=MOCKMERGE.filter.fasta, group=MOCKMERGE.groups, groups=Mock)
#system(ren MOCKMERGE.filter.pick.fasta Mock.filter.pick.fasta)
#system(ren MOCKMERGE.pick.groups Mock.pick.groups)
#get.groups(fasta=MOCKMERGE.filter.fasta, group=MOCKMERGE.groups, groups=MOCK.v35)
#system(ren MOCKMERGE.filter.pick.fasta MOCK.v35.filter.pick.fasta)
#system(ren MOCKMERGE.pick.groups MOCK.v35.pick.groups)
#seq.error(fasta=Mock.filter.pick.fasta, name=TB18S.final.pick.names, reference=MOCK.v35.filter.pick.fasta, processors=4)
#remove.groups(fasta=TB18S.final.fasta, group=TB18S.final.groups, groups=Mock, name=TB18S.final.names, taxonomy=TB18S.trim.unique.good.filter.unique.precluster.pick.nr_v119.wang.taxonomy)
#dist.seqs(fasta=TB18S.final.fasta, processors=1)
#cluster(column=TB18S.final.dist, name=TB18S.final.names)
#make.shared(list=TB18S.final.an.list, group=TB18S.final.groups, label=0.02)
#count.groups()
#classify.otu(list=TB18S.final.an.list, name=TB18S.final.names, group=TB18S.final.groups, taxonomy=TB18S.unique.good.filter.unique.precluster.pick.nr_v119.wang.pick.taxonomy, label=0.02, cutoff=90)
#collect.single(shared=TB18S.final.an.shared)
#rarefaction.single(shared=TB18S.final.an.shared, calc=sobs, freq=100)
#summary.single()
#heatmap.bin(shared=TB18S.final.an.shared, scale=log2, numotu=50)
#heatmap.sim(calc=jclass-thetayc)
#tree.shared(calc=thetayc-jclass)
#dist.shared(shared=TB18S.final.an.shared, calc=thetayc-jclass)
#pcoa(phylip=current)
#pcoa(phylip=current)
#nmds(phylip=current)
#nmds(phylip=current)

