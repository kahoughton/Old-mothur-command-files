fastq.info(fastq=TB2_20141030.fastq)
trim.seqs(fasta=TB2_20141030.fasta, qfile=TB2_20141030.qual, oligos=TB2_20141030_oligos.txt, qaverage=30, keepfirst=150, processors=2)
summary.seqs(fasta=TB2_20141030.trim.fasta)
system(rm TB2_20141030.fasta)
system(rm TB2_20141030.qual)
system(rm TB2_20141030.trim.qual)
system(rm TB2_20141030.scrap.qual)
system(rm TB2_20141030.scrap.fasta)
unique.seqs(fasta=TB2_20141030.trim.fasta)
system(rm TB2_20141030.trim.fasta)
summary.seqs(fasta=TB2_20141030.trim.unique.fasta, name=TB2_20141030.trim.names)
align.seqs(fasta=TB2_20141030.trim.unique.fasta, reference=silva.nr_v119.pcr.align, processors=2)
system(rm TB2_20141030.trim.unique.fasta)
summary.seqs(fasta=TB2_20141030.trim.unique.align,name=TB2_20141030.trim.names)
screen.seqs(fasta=TB2_20141030.trim.unique.align, name=TB2_20141030.trim.names, group=TB2_20141030.groups, start=2, end=7917, processors=2)
system(rm TB2_20141030.trim.unique.align)
summary.seqs(fasta=TB2_20141030.trim.unique.good.align, name=TB2_20141030.trim.good.names)
filter.seqs(fasta=TB2_20141030.trim.unique.good.align, trump=., vertical=T, processors=2)
system(rm TB2_20141030.trim.unique.good.align)
unique.seqs(fasta=TB2_20141030.trim.unique.good.filter.fasta, name=TB2_20141030.trim.good.names)
summary.seqs(fasta=TB2_20141030.trim.unique.good.filter.unique.fasta, name=TB2_20141030.trim.unique.good.filter.names)
pre.cluster(fasta=TB2_20141030.trim.unique.good.filter.unique.fasta, name=TB2_20141030.trim.unique.good.filter.names, group=TB2_20141030.good.groups, diffs=2, processors=2)
chimera.uchime(fasta=TB2_20141030.trim.unique.good.filter.unique.precluster.fasta, name=TB2_20141030.trim.unique.good.filter.unique.precluster.names, group=TB2_20141030.good.groups, processors=2)
remove.seqs(accnos=TB2_20141030.trim.unique.good.filter.unique.precluster.uchime.accnos, fasta=TB2_20141030.trim.unique.good.filter.unique.precluster.fasta, name=TB2_20141030.trim.unique.good.filter.unique.precluster.names, group=TB2_20141030.good.groups)
summary.seqs(fasta=TB2_20141030.trim.unique.good.filter.unique.precluster.pick.fasta, name=TB2_20141030.trim.unique.good.filter.unique.precluster.pick.names)
count.groups()
classify.seqs(fasta=TB2_20141030.trim.unique.good.filter.unique.precluster.pick.fasta, group=TB2_20141030.good.pick.groups, name=TB2_20141030.trim.unique.good.filter.unique.precluster.pick.names, template=silva.nr_v119.align, taxonomy=silva.nr_v119.tax, cutoff=80, processors=2)
remove.lineage(taxonomy=TB2_20141030.trim.unique.good.filter.unique.precluster.pick.nr_v119.wang.taxonomy, fasta=TB2_20141030.trim.unique.good.filter.unique.precluster.pick.fasta, group=TB2_20141030.good.pick.groups, name=TB2_20141030.trim.unique.good.filter.unique.precluster.pick.names, taxon=unknown-unclassified-Bacteria;Cyanobacteria_Chloroplast;Chloroplast;Chloroplast)
summary.seqs(fasta=TB2_20141030.trim.unique.good.filter.unique.precluster.pick.pick.fasta, name=TB2_20141030.trim.unique.good.filter.unique.precluster.pick.pick.names)
system(mv TB2_20141030.trim.unique.good.filter.unique.precluster.pick.pick.names TB2_20141030.final.names)
system(mv TB2_20141030.trim.unique.good.filter.unique.precluster.pick.pick.fasta TB2_20141030.final.fasta)
system(mv TB2_20141030.good.pick.pick.groups TB2_20141030.final.groups)
#get.groups(group=TB2_20141030.final.groups, groups=Mock, fasta=TB2_20141030.final.fasta, name=TB2_20141030.final.names)
#make.group(fasta=HMP_MOCK.v35.align, groups=MOCK.v35)
#merge.files(input=HMP_MOCK.v35.groups-TB2_20141030.final.pick.groups, output=MOCKMERGE.groups)
#merge.files(input=HMP_MOCK.v35.align-TB2_20141030.final.pick.fasta, output=MOCKMERGE.fasta)
#align.seqs(fasta=MOCKMERGE.fasta, reference=silva.seed_v119.align, processors=2)
#filter.seqs(fasta=MOCKMERGE.align, vertical=T, trump=.)
#get.groups(fasta=MOCKMERGE.filter.fasta, group=MOCKMERGE.groups, groups=Mock)
#system(mv MOCKMERGE.filter.pick.fasta Mock.filter.pick.fasta)
#system(mv MOCKMERGE.pick.groups Mock.pick.groups)
#get.groups(fasta=MOCKMERGE.filter.fasta, group=MOCKMERGE.groups, groups=MOCK.v35)
#system(mv MOCKMERGE.filter.pick.fasta MOCK.v35.filter.pick.fasta)
#system(mv MOCKMERGE.pick.groups MOCK.v35.pick.groups)
#seq.error(fasta=Mock.filter.pick.fasta, name=TB2_20141030.final.pick.names, reference=MOCK.v35.filter.pick.fasta, processors=2)
#remove.groups(fasta=TB2_20141030.final.fasta, group=TB2_20141030.final.groups, groups=Mock, name=TB2_20141030.final.names, taxonomy=TB2_20141030.trim.unique.good.filter.unique.precluster.pick.nr_v119.wang.taxonomy)
dist.seqs(fasta=TB2_20141030.final.fasta, processors=1)
cluster(column=TB2_20141030.final.dist, name=TB2_20141030.final.names)
make.shared(list=TB2_20141030.final.an.list, group=TB2_20141030.final.groups, label=0.03)
#count.groups()
classify.otu(list=TB2_20141030.final.an.list, name=TB2_20141030.final.names, group=TB2_20141030.final.groups, taxonomy=TB2_20141030.trim.unique.good.filter.unique.precluster.pick.nr_v119.wang.pick.taxonomy, label=0.03, cutoff=80)
#collect.single(shared=TB2_20141030.final.pick.an.shared, calc=chao-invsimpson, freq=100)
#rarefaction.single(shared=TB2_20141030.final.pick.an.shared, calc=sobs, freq=100)
#summary.single(calc=nseqs-coverage-sobs-invsimpson)
#heatmap.bin(shared=TB2_20141030.final.pick.an.shared, scale=log2, numotu=50)
#heatmap.sim(calc=jclass-thetayc)
#tree.shared(calc=thetayc-jclass)
#dist.shared(shared=TB2_20141030.final.pick.an.shared, calc=thetayc-jclass)
#pcoa(phylip=current)
#pcoa(phylip=current)
#nmds(phylip=current)
#nmds(phylip=current)
